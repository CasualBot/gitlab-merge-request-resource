#!/bin/bash
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source "$(dirname "$0")/common.sh"

destination=$1

if [ -z "$destination" ]; then
  echo "usage: $0 <path/to/destination>" >&2
  exit 1
fi

payload=$(mktemp "${TMPDIR}/gitlab-merge-request-resource.XXXXXX")

cat > "${payload}" <&0

gitlab_host=$(jq -r '.source.gitlab_host // ""' < "${payload}")
private_token=$(jq -r '.source.private_token // ""' < "${payload}")
project_path=$(jq -r '.source.project_path // ""' < "${payload}")
version=$(jq -r '.version // ""' < "${payload}")
version_sha=$(echo "${version}" | jq -r '.sha // ""')
params_status=$(jq -r '.params.status // ""' < "${payload}")

project_path_encoded="${project_path//'/'/'%2F'}" # url encode "/"

if [ -z "${version}" ]; then
  version='{"updated_at":"1800-01-01T00:00:00.000Z","sha":null}'
fi

cd "${destination}"

curl \
--request POST
--header "PRIVATE-TOKEN: ${private_token}" \
"https://${gitlab_host}/api/v3/projects/${project_path_encoded}/statuses/${version_sha}?state=${params_status}"

jq -n "{
  version: ${version},
  metadata: $(git_metadata)
}" >&3
